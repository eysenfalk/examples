apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otel-demo-ingress
  namespace: demo
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    external-dns.alpha.kubernetes.io/hostname: "demo.${var.domain_name}"
spec:
  tls:
  - hosts:
    - "demo.${var.domain_name}"
    secretName: otel-demo-tls
  rules:
  - host: "demo.${var.domain_name}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: otel-demo
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    external-dns.alpha.kubernetes.io/hostname: "grafana.${var.domain_name}"
spec:
  tls:
  - hosts:
    - "grafana.${var.domain_name}"
    secretName: grafana-tls
  rules:
  - host: "grafana.${var.domain_name}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000 