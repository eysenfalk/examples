apiVersion: monitoring.grafana.com/v1alpha1
kind: GrafanaAgent
metadata:
  name: grafana-agent
  namespace: monitoring
spec:
  integrations:
    metrics:
      prometheus:
        enabled: true
        scrape_configs:
        - job_name: 'otel-collector'
          static_configs:
          - targets: ['otel-collector.demo.svc.cluster.local:8889']
    logs:
      loki:
        enabled: true
    traces:
      tempo:
        enabled: true
---
apiVersion: monitoring.grafana.com/v1alpha1
kind: Mimir
metadata:
  name: mimir
  namespace: monitoring
spec:
  replicas: 1
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
---
apiVersion: monitoring.grafana.com/v1alpha1
kind: Loki
metadata:
  name: loki
  namespace: monitoring
spec:
  replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
---
apiVersion: monitoring.grafana.com/v1alpha1
kind: Tempo
metadata:
  name: tempo
  namespace: monitoring
spec:
  replicas: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
---
apiVersion: monitoring.grafana.com/v1alpha1
kind: Grafana
metadata:
  name: grafana
  namespace: monitoring
spec:
  deployment:
    envFrom:
    - secretRef:
        name: grafana-admin-credentials
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"
  ingress:
    enabled: true
    hostname: grafana.otel.local
  dashboardsConfigMapSelector:
    matchLabels:
      grafana_dashboard: "true"
  datasources:
    - name: Prometheus
      type: prometheus
      url: http://mimir-nginx.monitoring.svc.cluster.local:9009/prometheus
      isDefault: true
    - name: Loki
      type: loki
      url: http://loki.monitoring.svc.cluster.local:3100
    - name: Tempo
      type: tempo
      url: http://tempo.monitoring.svc.cluster.local:3200 